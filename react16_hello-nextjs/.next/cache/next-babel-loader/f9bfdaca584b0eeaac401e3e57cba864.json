{"ast":null,"code":"var _jsxFileName = \"/Users/sujinlove/Desktop/Ezen_react/react_study/react16_hello-nextjs/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\n\nconst about = props => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"About.js\")));\n}; // 모든 pages 폴더 내의 함수들은 getInitialProps 라는 하위 함수를 갖는다.\n// 이 함수를 통해 각 페이지가 웹 프로그램으로 동작할 수 있는 기능을 넘겨받는다.\n// ex) 브라우저의 요청을 받기 위한 request 객체 등..\n\n\nabout.getInitialProps = async props => {\n  console.log(props);\n  let from = \"client\";\n\n  if (props.req) {\n    from = \"server\";\n  }\n\n  return {\n    a: 123,\n    b: 234,\n    from: from\n  };\n};\n\nexport default about;","map":{"version":3,"sources":["/Users/sujinlove/Desktop/Ezen_react/react_study/react16_hello-nextjs/pages/about.js"],"names":["Layout","about","props","getInitialProps","console","log","from","req","a","b"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF;AAOD,CARD,C,CAUA;AACA;AACA;;;AAEAD,KAAK,CAACE,eAAN,GAAwB,MAAMD,KAAN,IAAe;AACrCE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEA,MAAII,IAAI,GAAG,QAAX;;AAEA,MAAIJ,KAAK,CAACK,GAAV,EAAe;AACbD,IAAAA,IAAI,GAAG,QAAP;AACD;;AAED,SAAO;AAAEE,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE,GAAb;AAAkBH,IAAAA,IAAI,EAAEA;AAAxB,GAAP;AACD,CAVD;;AAYA,eAAeL,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\n\nconst about = props => {\n  return (\n    <Layout>\n      <div>\n        <h1>About.js</h1>\n      </div>\n    </Layout>\n  );\n};\n\n// 모든 pages 폴더 내의 함수들은 getInitialProps 라는 하위 함수를 갖는다.\n// 이 함수를 통해 각 페이지가 웹 프로그램으로 동작할 수 있는 기능을 넘겨받는다.\n// ex) 브라우저의 요청을 받기 위한 request 객체 등..\n\nabout.getInitialProps = async props => {\n  console.log(props);\n\n  let from = \"client\";\n\n  if (props.req) {\n    from = \"server\";\n  }\n\n  return { a: 123, b: 234, from: from };\n};\n\nexport default about;\n"]},"metadata":{},"sourceType":"module"}
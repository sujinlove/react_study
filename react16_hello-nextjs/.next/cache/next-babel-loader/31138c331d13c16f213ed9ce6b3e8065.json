{"ast":null,"code":"var _jsxFileName = \"/Users/sujinlove/Desktop/Ezen_react/react_study/react16_hello-nextjs/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\n\nconst about = props => {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"About.js\")), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"\\uC800\\uB85C \\uB9D0\\uC500\\uB4DC\\uB9B4\\uAC83 \\uAC19\\uC73C\\uBA74 \", props.from, \"\\uC5D0\\uC11C \\uC2E4\\uD589\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"a=\", props.a), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"b=\", props.b));\n}; // 모든 pages 폴더 내의 함수들은 getInitialProps 라는 하위 함수를 갖는다.\n// 이 함수를 통해 각 페이지가 웹 프로그램으로 동작할 수 있는 기능을 넘겨받는다.\n// ex) 브라우저의 요청을 받기 위한 request 객체 등..\n\n\nabout.getInitialProps = async props => {\n  console.log(props);\n  let from = \"client\";\n\n  if (props.req) {\n    from = \"server\";\n  }\n\n  return {\n    a: 123,\n    b: 234,\n    from: from\n  };\n};\n\nexport default about;","map":{"version":3,"sources":["/Users/sujinlove/Desktop/Ezen_react/react_study/react16_hello-nextjs/pages/about.js"],"names":["Layout","about","props","from","a","b","getInitialProps","console","log","req"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEAAkBA,KAAK,CAACC,IAAxB,6DAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMD,KAAK,CAACE,CAAZ,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMF,KAAK,CAACG,CAAZ,CANF,CADF;AAUD,CAXD,C,CAaA;AACA;AACA;;;AAEAJ,KAAK,CAACK,eAAN,GAAwB,MAAMJ,KAAN,IAAe;AACrCK,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA,MAAIC,IAAI,GAAG,QAAX;;AAEA,MAAID,KAAK,CAACO,GAAV,EAAe;AACbN,IAAAA,IAAI,GAAG,QAAP;AACD;;AAED,SAAO;AAAEC,IAAAA,CAAC,EAAE,GAAL;AAAUC,IAAAA,CAAC,EAAE,GAAb;AAAkBF,IAAAA,IAAI,EAAEA;AAAxB,GAAP;AACD,CAVD;;AAYA,eAAeF,KAAf","sourcesContent":["import Layout from \"../components/Layout\";\n\nconst about = props => {\n  return (\n    <Layout>\n      <div>\n        <h1>About.js</h1>\n      </div>\n      <h2>저로 말씀드릴것 같으면 {props.from}에서 실행되었습니다.</h2>\n      <p>a={props.a}</p>\n      <p>b={props.b}</p>\n    </Layout>\n  );\n};\n\n// 모든 pages 폴더 내의 함수들은 getInitialProps 라는 하위 함수를 갖는다.\n// 이 함수를 통해 각 페이지가 웹 프로그램으로 동작할 수 있는 기능을 넘겨받는다.\n// ex) 브라우저의 요청을 받기 위한 request 객체 등..\n\nabout.getInitialProps = async props => {\n  console.log(props);\n\n  let from = \"client\";\n\n  if (props.req) {\n    from = \"server\";\n  }\n\n  return { a: 123, b: 234, from: from };\n};\n\nexport default about;\n"]},"metadata":{},"sourceType":"module"}
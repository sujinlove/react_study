{"ast":null,"code":"var _jsxFileName = \"/Users/sujinlove/Desktop/Ezen_react/react_study/react16_hello-nextjs/pages/get_param_result.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Layout from \"../components/Layout\";\n\nconst getParamResult = props => {\n  console.log(props);\n  const {\n    router\n  } = props;\n  console.log(router);\n  const {\n    query\n  } = props.url;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, query.ans == 300 ? __jsx(\"h1\", {\n    style: {\n      color: \"green\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"\\uC815\\uB2F5\\uC785\\uB2C8\\uB2E4.\") : __jsx(\"h1\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"\\uC624\\uB2F5\\uC785\\uB2C8\\uB2E4.\"));\n}; // Router로 컴포넌트를 Wrappering 처리\n\n\nexport default withRouter(getParamResult);","map":{"version":3,"sources":["/Users/sujinlove/Desktop/Ezen_react/react_study/react16_hello-nextjs/pages/get_param_result.js"],"names":["withRouter","Layout","getParamResult","props","console","log","router","query","url","ans","color"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAaH,KAAnB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAYJ,KAAK,CAACK,GAAxB;AAEA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,IAAa,GAAb,GACC;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADD,GAGC;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJJ,CADF;AASD,CAjBD,C,CAmBA;;;AACA,eAAeV,UAAU,CAACE,cAAD,CAAzB","sourcesContent":["import { withRouter } from \"next/router\";\nimport Layout from \"../components/Layout\";\n\nconst getParamResult = props => {\n  console.log(props);\n\n  const { router } = props;\n  console.log(router);\n\n  const { query } = props.url;\n\n  return (\n    <Layout>\n      {query.ans == 300 ? (\n        <h1 style={{ color: \"green\" }}>정답입니다.</h1>\n      ) : (\n        <h1 style={{ color: \"red\" }}>오답입니다.</h1>\n      )}\n    </Layout>\n  );\n};\n\n// Router로 컴포넌트를 Wrappering 처리\nexport default withRouter(getParamResult);\n"]},"metadata":{},"sourceType":"module"}